// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Location {
  id               String     @id @default(cuid())
  placeId          String     @unique
  name             String?
  formattedAddress String?
  country          String?
  city             String?
  district         String?
  lat              Float?
  lng              Float?
  locationType     String?
  photos           String[]
  createdAt        DateTime?   @default(now())
  updatedAt        DateTime?   @updatedAt

  trips            Trip[]
}

model Trip {
  id          String     @id @default(cuid())
  location    Location   @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationId  String
  title       String?    
  from        DateTime?
  to          DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  places      Place[]
}

model Place {
  id               String     @id @default(cuid())
  placeId          String     @unique
  trip             Trip       @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId           String
  name             String?
  formattedAddress String?
  country          String?
  city             String?
  district         String?
  lat              Float?
  lng              Float?
  tags             String[]
  photos           String[]
  openingHours     String[]
  rating           Float?
  userRatingsTotal Int?
  createdAt        DateTime?   @default(now())
  updatedAt        DateTime?   @updatedAt

  reviews          PlaceReview[]
}

model PlaceReview {
  id                      String     @id @default(cuid())
  place                   Place      @relation(fields: [placeId], references: [id], onDelete: Cascade)
  placeId                 String
  authorName              String?
  authorUrl               String?
  language                String?
  profilePhotoUrl         String?
  rating                  Float?
  relativeTimeDescription String?
  text                    String?
  postedAt                DateTime?
}